name: TrackieLink CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 3. Install Conan
        run: pip install conan

      - name: 4. Set up Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: 5. Create Default Conan Profile
        run: conan profile detect --force

      - name: 6. Run Build Script (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          chmod +x ./Scripts/Build.sh
          ./Scripts/Build.sh

      - name: 6. Run Build Script (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: .\Scripts\Build.bat

      - name: 7. Run Tests
        shell: bash
        run: ctest --test-dir build --output-on-failure --schedule-random

  lint:
    name: Code Formatting Check
    runs-on: ubuntu-latest
    needs: build # Run only if the build jobs succeed

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Install clang-format
        run: sudo apt-get update && sudo apt-get install -y clang-format-12

      - name: 3. Run Formatting Check
        run: |
          find src -iname *.hpp -o -iname *.cpp -o -iname *.h -o -iname *.c | xargs clang-format-12 --dry-run --Werror
